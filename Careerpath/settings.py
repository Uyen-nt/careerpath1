"""
Django settings for Careerpath project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['careerpath.io.vn', 'www.careerpath.io.vn', '103.173.66.148', 'www.google.com', '127.0.0.1', 'localhost']
CSRF_TRUSTED_ORIGINS = ['https://careerpath.io.vn', 'https://www.careerpath.io.vn']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'social_django',
    'django.contrib.humanize',

    'main',
    'quiz_highschool',
    'quiz_university',   
    'trend',
    'premium.apps.PremiumConfig',
    'users.apps.UsersConfig',
    'core',
]

list_per_page = 20
list_select_related = True
readonly_fields = ('date_joined', 'last_login')

LOGIN_URL = 'users:login'
AUTH_USER_MODEL = 'users.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware', 
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Careerpath.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'users' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',          
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'Careerpath.wsgi.application'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE'),
        'USER': os.getenv('MYSQL_USER'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD'),
        'HOST': os.getenv('MYSQL_HOST','localhost'),
        'PORT': os.getenv('MYSQL_PORT','3306'),
        'OPTIONS': {
            'charset': 'utf8mb4',
            # Asia/Ho_Chi_Minh = +07:00
            "init_command": "SET time_zone = '+07:00'",
        },       
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',  # thêm dòng này để bật đăng nhập Google
    'django.contrib.auth.backends.ModelBackend',
)

PREMIUM_PRICING = {
    1: 29000,   # 1 tháng
    3: 79000,  # 3 tháng (đã chiết khấu)
    6: 139000, # 6 tháng (đã chiết khấu)
}

GOOGLE_OAUTH_CLIENT_ID = os.getenv("GOOGLE_OAUTH_CLIENT_ID")
GOOGLE_OAUTH_CLIENT_SECRET = os.getenv("GOOGLE_OAUTH_CLIENT_SECRET")

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = GOOGLE_OAUTH_CLIENT_ID        
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = GOOGLE_OAUTH_CLIENT_SECRET

# PayOs settings
PAYOS_CLIENT_ID = os.getenv('PAYOS_CLIENT_ID')
PAYOS_API_KEY = os.getenv('PAYOS_API_KEY')
PAYOS_CHECKSUM_KEY = os.getenv('PAYOS_CHECKSUM_KEY')

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',

    # nếu email đã có user trong DB thì map luôn để không tạo mới
    'users.pipeline.associate_by_email',

    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',        # <- tạo user mới (nếu cần)

    # <- ĐẶT Ở ĐÂY để lúc này đã có kwargs['user']
    'users.pipeline.save_avatar_from_google',

    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'uyenntse170340@fpt.edu.vn'  
EMAIL_HOST_PASSWORD = 'cood qsfk rlam qfdi'  
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'vi'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = Path('/var/www/careerpath/static_files')

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MEDIA_URL = '/media/'
MEDIA_ROOT = Path('/var/www/careerpath/media')

LOGIN_REDIRECT_URL = '/'          # sau đăng nhập google chuyển về trang chủ
LOGOUT_REDIRECT_URL = '/'         # sau đăng xuất chuyển về trang chủ

from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent
LOG_DIR = BASE_DIR / "logs"
LOG_DIR.mkdir(exist_ok=True)
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {"format": "%(asctime)s %(levelname)s [%(name)s] %(message)s"},
    },
    "handlers": {
        "file": {
            "class": "logging.handlers.RotatingFileHandler",
            "filename": str(LOG_DIR / "django.log"),   # <— tuyệt đối, nằm trong dự án
            "maxBytes": 5 * 1024 * 1024,
            "backupCount": 3,
            "formatter": "verbose",
            "encoding": "utf-8",
        },
        "console": {"class": "logging.StreamHandler"},
    },
    "loggers": {
        "django": {"handlers": ["file", "console"], "level": "INFO", "propagate": True},
    },
}

JAZZMIN_SETTINGS = {
    # --- Tiêu đề & Thương hiệu ---
    "site_title": "CareerPath Admin",
    "site_header": "CAREERPATH",       # <-- ĐÃ IN HOA
    "site_brand": "CAREERPATH",        # <-- ĐÃ IN HOA
    "welcome_sign": "Chào mừng tới trang quản trị CareerPath",
    "copyright": "CareerPath © 2025",
    

    # --- CSS & JS ---
    "custom_css": "css/custom.css", # Đổi tên file CSS cho phù hợp
    "user_avatar": "avatar",        # tên field ImageField trên CustomUser
    "show_user_menu": True,  

    # 💡 [CẢI TIẾN] CẬP NHẬT ICONS CHO PHÙ HỢP HƠN
    "icons": {
        # ===== App-level =====
        "users": "fas fa-users-cog",
        "premium": "fas fa-gem",
        "quiz_highschool": "fas fa-school",
        "quiz_university": "fas fa-university",
        "trend": "fas fa-chart-line",
        "python_social_auth": "fas fa-share-alt",  # tránh 'fab' (brands)

        # ===== Users (model + proxy) =====
        "users.CustomUser": "fas fa-user",
        "users.SuperUserProxy": "fas fa-user-shield",
        "users.RegularUserProxy": "fas fa-user-friends",
        "users.AnalyticsUserProxy": "fas fa-chart-pie",

        # ===== Premium =====
        "premium.PremiumSubscription": "fas fa-id-badge",
        "premium.Transaction": "fas fa-receipt",

        # ===== Quiz_Highschool =====
        "quiz_highschool.QuizHighschool": "fas fa-file-alt",
        "quiz_highschool.ResultFeedback": "fas fa-comments",
        "quiz_highschool.ResultFeedbackHighschool": "fas fa-comment-dots",

        # ===== Quiz_University =====
        "quiz_university.QuizUniversity": "fas fa-clipboard",
        "quiz_university.ResultFeedbackUniversity": "fas fa-comment-dots",
    },
    
    # --- Các cài đặt khác giữ nguyên ---
    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index"},
        {"name": "Xem trang web", "url": "/", "icon": "fas fa-globe", "new_window": True},
    ],
    "order_with_respect_to": [
        "users", "premium", "quiz_highschool", "quiz_university", "trend", "python_social_auth",
    ],
    "hide_apps": ["auth", "quiz_workers"],
    "hide_models": ["python_social_auth.nonce", "python_social_auth.association"],
    "show_ui_builder": False,
    "changeform_format": "horizontal_tabs",
    "related_modal_active": True,
}

# JAZZMIN_UI_TWEAKS gần như giữ nguyên vì chúng ta chủ yếu tùy biến bằng CSS
JAZZMIN_UI_TWEAKS = {
    "theme": "flatly",
    "navbar_small_text": False,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": False,
    "sidebar_nav_small_text": False,
    "navbar_fixed": True,
    "sidebar_fixed": True,
    "footer_fixed": False,
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "sidebar": "sidebar-dark-charcoal",
    "sidebar_nav_flat_style": True,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact": True,
    "sidebar_nav_legacy_style": False,
    "button_classes": {
        "primary": "btn-primary", "secondary": "btn-secondary", "info": "btn-info",
        "warning": "btn-warning", "danger": "btn-danger", "success": "btn-success"
    },
    "actions_sticky_top": True,
}